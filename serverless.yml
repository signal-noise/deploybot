service: deploybot

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  stage: dev
  region: eu-west-2
  runtime: python2.7
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    SLACK_WEBHOOK_URL: ${env:SLACK_WEBHOOK_URL}
    SLACK_CHANNEL: ${env:SLACK_CHANNEL}
    SLACK_VERIFICATION_TOKEN: ${env:SLACK_VERIFICATION_TOKEN}
    SLACK_TEAM_ID: ${env:SLACK_TEAM_ID}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  command:
    handler: slack/command.receive
    events:
      - http:
          path: slack/command
          method: post
          cors: true
  message:
    handler: slack/message.send
    events:
      - http:
          path: slack/message
          method: post
          cors: true
  # delete:
  #   handler: slack/delete.delete
  #   events:
  #     - http:
  #         path: slack/{id}
  #         method: delete
  #         cors: true

resources:
  Resources:
    slackDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
